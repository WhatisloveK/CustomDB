syntax = "proto3";

option csharp_namespace = "GrpcClient";

package dbEngine;

service DBService {
  rpc CreateDatabase (CreateDbRequest) returns (BaseReply);
  rpc CreateTable (TableRequest) returns (BaseReply);
  rpc DeleteTable (TableRequest) returns (BaseReply);
  rpc GetTableList (GetTableListRequest) returns (GetTableListReply);
}

service EntityService {
	rpc AddColumn (AddColumnRequest) returns (BaseReply);
    rpc DropColumn (DropColumnRequst) returns (BaseReply);
	rpc Insert (InsertRequest) returns (BaseReply);
	rpc Delete (DeleteRequest) returns (BaseReply);
	rpc Update (UpdateRequest) returns (BaseReply);
	rpc Select (SelectRequest) returns (SelectReply);
	rpc InnerJoin (InnerJoinRequest) returns (SelectReply);
	rpc CrossJoin (CrossJoinRequest) returns (SelectReply);
}

enum ComparsonType
{
   COMPARSON_TYPE_EQUAL = 0;
   COMPARSON_TYPE_NOT_EQUAL = 1;
   COMPARSON_TYPE_GREATER = 2;
   COMPARSON_TYPE_GREATER_OR_EQUAL = 3;
   COMPARSON_TYPE_LESS = 4;
   COMPARSON_TYPE_LESS_OR_EQUAL = 5;
   COMPARSON_TYPE_STARTS_WITH = 6;
   COMPARSON_TYPE_NOT_STARTS_WITH = 7;
   COMPARSON_TYPE_CONTAINS = 8;
   COMPARSON_TYPE_NOT_CONTAINS = 9;
   COMPARSON_TYPE_IS_NULL = 10;
   COMPARSON_TYPE_IS_NOT_NULL = 11;
   COMPARSON_TYPE_ENDS_WITH = 12;
   COMPARSON_TYPE_NOT_ENDS_WITH = 13;
}

message Validator {
	string value = 1;
	ComparsonType comparsonType = 2;
	string dataValueTypeId = 3;
}

message AddColumnRequest {
	string dbName = 1;
	string tableName = 2;
	string columnName = 3;
	string dataValueTypeId = 4;
	repeated Validator validators = 5;
}

message DropColumnRequst {
	string dbName = 1;
	string tableName = 2;
	string columnName = 3;
}

message DeleteRequest {
	string dbName = 1;
	string tableName = 2;
	repeated string guids = 3;
}

message Row {
	repeated string items = 1;
}

message InsertRequest {
	string dbName = 1;
	string tableName = 2;
	repeated Row rows = 3;
}

message ConditionsFieldEntry {
    string key = 1;
    repeated Validator value = 2;
}

message UpdateRequest {
	string dbName = 1;
	string tableName = 2;
	repeated Row rows = 3;
	repeated ConditionsFieldEntry conditions = 4;
}

message SelectRequest {
	string dbName = 1;
	string tableName = 2;
	repeated ConditionsFieldEntry conditions = 3;
	bool showSysColumns = 4; 
}

message InnerJoinRequest {
	string dbName = 1;
	string firstTableName = 2;
	string secondTableName = 3;
	string firstColumnName = 4;
	string secondColumnName = 5;
	bool showSysColumns = 6; 
}

message CrossJoinRequest {
	string dbName = 1;
	string firstTableName = 2;
	string secondTableName = 3;
	bool showSysColumns = 4; 
}

message SelectReply {
	int32 code = 1;
	string message = 2;
	string stackTrace = 3;
	repeated Row rows = 4;
}


message CreateDbRequest {
	string name = 1;
	string rootPath = 2;
	int64 fileSize = 3;
}

message TableRequest {
	string dbName = 1;
	string tableName = 2;
}

message GetTableListRequest {
	string dbName = 1;
}

message GetTableListReply {
	int32 code = 1;
	string message = 2;
	string stackTrace = 3;
	repeated string tables = 4;
}

message BaseReply {
	int32 code = 1;
	string message = 2;
	string stackTrace = 3;
}

